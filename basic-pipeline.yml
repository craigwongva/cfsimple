AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
  S3Bucket:
    Description: The name of the S3 bucket that contains the source artifact, which must be in the same region as this stack
    Type: String
  SourceS3Key:
    Default: wordpress-single-instance.zip
    Description: The file name of the source artifact, such as myfolder/myartifact.zip
    Type: String
  TemplateFileName:
    Default: wordpress-single-instance.yaml
    Description: The file name of the WordPress template
    Type: String
  TestStackName:
    Default: Test-MyWordPressSite
    Description: A name for the test WordPress stack
    Type: String
  TestStackConfig:
    Default: test-stack-configuration.json
    Description: The configuration file name for the test WordPress stack
    Type: String
  ProdStackName:
    Default: Prod-MyWordPressSite
    Description: A name for the production WordPress stack
    Type: String
  ProdStackConfig:
    Default: prod-stack-configuration.json
    Description: The configuration file name for the production WordPress stack
    Type: String
  ChangeSetName:
    Default: UpdatePreview-MyWordPressSite
    Description: A name for the production WordPress stack change set
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String
  githubpassword:
    Type: String
#Metadata:
#  AWS::CloudFormation::Interface:
#    ParameterGroups:
#      - Label:
#          default: "CodePipeline Settings"
#        Parameters:
#          - PipelineName
#          - S3Bucket
#          - SourceS3Key
#          - Email
#      - Label:
#          default: "Test Stack Settings"
#        Parameters:
#          - TestStackName
#          - TemplateFileName
#          - TestStackConfig
#      - Label:
#          default: "Production Stack Settings"
#        Parameters:
#          - ChangeSetName
#          - ProdStackName
#          - ProdStackConfig

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email
          
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
              
#      Path: /service-role/
      Policies:
        -
          PolicyName: "CodeBuildNestedCFNAccessPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                Resource:
                  - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
              -
                Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
#                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CFNTemplateRepoName}
#                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ValidateResourcesRepoName}
                  - Fn::Sub: arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:wordpress-build-test
              -
                Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "iam:Get*"
                  - "iam:List*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              -
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              -
                Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
#                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/* 
#                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreS3Location}/* 
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
                  - "arn:aws:s3:::wordpress-build-test/*"
                  - "arn:aws:s3:::redf4rth-wordpress-codebuild/*"

  ValidateResourceProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ValidateResource-${AWS::StackName}
      Description: Test build to validate the resources created by CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location: !Ref 'ArtifactStoreBucket'
##         Location: !Ref: ArtifactStoreS3Location 
        Name:
          Fn::Sub: ValidateResource-${AWS::StackName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:2.7.12
      Source:
      
        Location:
#          Fn::Sub: https://git-codecommit.us-west-2.amazonaws.com/v1/repos/${ValidateResourcesRepoName}

#          "https://git-codecommit.us-west-2.amazonaws.com/v1/repos/wordpress-build-test"
#        Type: CODECOMMIT

#        Location: https://github.com/craigwongva/wordpress-build-test
#        Type: GITHUB
#        Auth: 
#          Type: OAUTH
          
        Location: redf4rth-wordpress-codebuild/redf4rth-wordpress-codebuild.zip
        Type: S3
      TimeoutInMinutes: 5 #15
      EncryptionKey:
        Fn::Sub: arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
      Tags:
        - Key: Name
          Value:
            Fn::Sub: ValidateResource-${AWS::StackName}
            
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: S3Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: craigwongva
                Repo: wordpress-build-test #aws-code-deploy-linux
                PollForSourceChanges: false #true
                Branch: master
                OAuthToken: !Ref githubpassword
              OutputArtifacts:
                - Name: TemplateSource                
              RunOrder: 1

        - Name: TestStage
          Actions:
#            - Name: CreateStack
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Provider: CloudFormation
#                Version: '1'
#              InputArtifacts:
#                - Name: TemplateSource
#              OutputArtifacts:
#                - Name: PeachArtifact
#              Configuration:
#                ActionMode: REPLACE_ON_FAILURE
#                RoleArn: !GetAtt [CFNRole, Arn]
#                StackName: !Ref TestStackName
#                TemplateConfiguration: !Sub "TemplateSource::${TestStackConfig}"
#                TemplatePath: !Sub "TemplateSource::${TemplateFileName}"
#              RunOrder: '1'

#start############################
            -
              Name: ValidateTestStack
              InputArtifacts:
                -
                  Name: TemplateSource #PeachArtifact
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                -
                  Name: ValidatedTestStack
              Configuration:
                ProjectName: ValidateResource-sample-Wordpress-pipeline
#                ProjectName: !Ref ValidateResourceProject
              RunOrder: 2
###end############################

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ec2:*'
                  - 'IAM:PassRole'
                Effect: Allow
                Resource: '*'
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'codebuild:*'
                Effect: Allow
                Resource: '*'