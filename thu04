https://github.com/awslabs/codepipeline-nested-cfn

https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-basic-walkthrough.html and https://github.com/awslabs/codepipeline-nested-cfn and my stuff combined.


https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-basic-walkthrough.html

https://s3.amazonaws.com/cloudformation-examples/user-guide/continuous-deployment/basic-pipeline.yml.

aws cloudformation create-stack \
--stack-name sample-Wordpress-pipeline \ 
--template-body file://basic-pipeline.yml \ 
--region us-west-2 \
--capabilities CAPABILITY_NAMED_IAM \
--parameters \
ParameterKey=PipelineName,ParameterValue=WordPress-test-pipeline \ 

ParameterKey=S3Bucket,ParameterValue=redf4rth-root-oregon \ 
ParameterKey=SourceS3Key,ParameterValue=wordpress-pipeline/wordpress.zip \
ParameterKey=Email,ParameterValue=craigjk@cox.net

aws cloudformation create-stack --stack-name sample-Wordpress-pipeline --template-body file://basic-pipeline.yml --region us-west-2 --capabilities CAPABILITY_NAMED_IAM --parameters ParameterKey=PipelineName,ParameterValue=WordPress-test-pipeline ParameterKey=S3Bucket,ParameterValue=redf4rth-root-oregon ParameterKey=SourceS3Key,ParameterValue=wordpress-pipeline/wordpress.zip ParameterKey=Email,ParameterValue=craigjk@cox.net ParameterKey=githubpassword,ParameterValue=REDACTED

sudo pip install boto3
   
--
how to zip three files and deploy to S3


   14  wget  https://s3.amazonaws.com/cloudformation-examples/user-

guide/continuous-deployment/wordpress-single-instance.zip

   15  unzip wordpress-single-instance.zip


   17  mkdir down

   18  mv *stack-configuration.json down/

   19  mv wordpress-single-instance.yaml down/

   26  cd down

  105  cd down
  
  106  zip -r ../wordpress.zip .
  
  107  aws s3 cp ../wordpress.zip s3://redf4rth-root-oregon/wordpress-pipeline/
--

use this before decoding: :1,$s#\\"#"#g
Then there's an extra " before the second { and then one by itself at the end of 

the string.
aws sts decode-authorization-message --encoded-message

The key - after 3+ hours debugging - is to add to the CloudFormation role an 

action 'IAM:PassRole' (in basic-pipeline.yml line 208). This enables at least CF 

to create an instance with an empty PipelineCreateInstanceRole ( wordpress-

single-instance.yaml)

next: preserve s3://redf4rth-root-oregon/wordpress-pipeline/wordpress.zip into a 

GitHub repo, along with this content, so that I have a more permanent record of 

today's successes. As a matter of fact, I'm going to toss basic-pipeline.yml up 

there temporarily.

Sunday 3pm:
Weird: I couldn't delete the stack before the role was gone. I thought this might help: 
https://forums.aws.amazon.com/thread.jspa?threadID=247511 but I didn't understand its
recommended process.

I created a new pipeline ('tample' prefix instead of 'sample' prefix). When I came back
from upstairs, the old problem was gone!

Sunday 9:50pm:
https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli
mentions Autnhorize Application page when hooking CodeBuild with GitHub, but I can't find that page anywhere.

--
$ python delete-versioned-bucket.py `aws cloudformation list-exports --query "Exports[?Name=='wordpress-build-test-artifact-store-bucket'].Value" --no-paginate --output text`
$ aws cloudformation delete-stack --stack-name sample-Wordpress-pipeline --region us-west-2 

