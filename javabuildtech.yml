version: 0.2

phases:
  install:
    commands:
      - DIR_AT_START=`pwd`
      #Install jq via curl, not apt-get.    
      - cd $DIR_AT_START
      - curl -O -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64
      - chmod +x jq-linux64
      - sudo mv jq-linux64 /usr/bin/jq
      #Install phantomjs
#      - cd $DIR_AT_START
#      - git clone http://github.com/craigwongva/gocontainer-phantom-public
#      - gocontainer-phantom-public/ubuntu/install-phantom
#      - BUILD_ID=dontKillMe 

  build:
    commands:
      - PUBLICIP=`curl http://checkip.amazonaws.com/32`

      - TEMP_SAYNEXT_SECGRP=`aws ec2 describe-security-groups --region us-west-2 | jq '.SecurityGroups | .[] | select((.GroupName | contains("saynext"))) | .GroupId' | sed s/\"//g`
      - aws ec2 authorize-security-group-ingress --group-id $TEMP_SAYNEXT_SECGRP --cidr $PUBLICIP/32 --port 8080 --protocol tcp --region us-west-2 || true

      - TEMP_GEOSERVER_SECGRP=`aws ec2 describe-security-groups --region us-west-2 | jq '.SecurityGroups | .[] | select((.GroupName | contains("geoserver"))) | .GroupId' | sed s/\"//g`
      - aws ec2 authorize-security-group-ingress --group-id $TEMP_GEOSERVER_SECGRP --cidr $PUBLICIP/32 --port 80 --protocol tcp --region us-west-2 || true

      - TEMP_GOCONTAINER_SECGRP=`aws ec2 describe-security-groups --region us-west-2 | jq '.SecurityGroups | .[] | select((.GroupName | contains("gocontainer"))) | .GroupId' | sed s/\"//g`
      - aws ec2 authorize-security-group-ingress --group-id $TEMP_GOCONTAINER_SECGRP --cidr $PUBLICIP/32 --port 8080 --protocol tcp --region us-west-2 || true

      - TEMP_TEGOLA_SECGRP=`aws ec2 describe-security-groups --region us-west-2 | jq '.SecurityGroups | .[] | select((.GroupName | contains("tegola"))) | .GroupId' | sed s/\"//g`
      - aws ec2 authorize-security-group-ingress --group-id $TEMP_TEGOLA_SECGRP --cidr $PUBLICIP/32 --port 8081 --protocol tcp --region us-west-2 || true

      - SLEEP_DEFAULT=1 #1200
      
  post_build:
    commands:
      - cd $DIR_AT_START
      
      - if  [ -z $PAUSE_FOR_USERDATA_COMPLETION ]  ; then sleep $SLEEP_DEFAULT ; else sleep $PAUSE_FOR_USERDATA_COMPLETION ; fi

#      - /usr/bin/phantomjs gocontainer-phantom-public/ubuntu/invoke-phantom.js >> /tmp/output &
      - SLEEP_FOR_GOCONTAINER_10x10_COMPLETION=1 #180
      - sleep $SLEEP_FOR_GOCONTAINER_10x10_COMPLETION
      
      - mvn package > keep_stdout_readable

      - mvn exec:java -Dexec.mainClass="com.mycompany.app.Beta" || true

      - echo $PUBLICIP, $DIR_AT_START, rc is $?
      
      - ps -ef || true      
      - pkill -f phantomjs || true
      - ps -ef | grep phantom || true
artifacts:
  files:
    - target/MyGroovy-1.0-SNAPSHOT.jar
